{"version":3,"sources":["types/horizontalQuestion.ts","components/Navbar/Navbar.tsx","common/Preloader/Preloader.tsx","App.tsx","store/reducers/horizontalReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["HorizontalQuestion","Navbar","className","id","to","Preloader","Horizontal","React","lazy","Column","App","fallback","exact","path","render","initialState","question","words","title","questionNumber","history","answer","error","rootReducer","combineReducers","horizontal","state","action","type","FETCH_HORIZONTAL_QUESTION_ERROR","payload","FETCH_HORIZONTAL_QUESTION_SUCCESS","FETCH_HORIZONTAL_ANSWER_SUCCESS","SET_HISTORY_ANSWERS","composeEnhancers","window","compose","store","createStore","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById"],"mappings":"qGAAO,IAAKA,EAAZ,kC,SAAYA,K,oCAAAA,E,sEAAAA,E,kEAAAA,E,kEAAAA,E,2CAAAA,M,wKCgBGC,EAbA,WACX,OACI,8BACI,qBAAKC,UAAU,kCAAf,SACI,qBAAIC,GAAG,aAAaD,UAAU,6BAA9B,UACI,6BAAI,cAAC,IAAD,CAASE,GAAI,cAAb,kCACJ,6BAAI,cAAC,IAAD,CAASA,GAAI,UAAb,sCCCTC,EARG,WACd,OACI,qBAAKH,UAAU,WAAf,SACI,qBAAKA,UAAU,qBCIrBI,EAAaC,IAAMC,MAAK,kBAAM,sDAC9BC,EAASF,IAAMC,MAAK,kBAAM,gCAkBjBE,MAdf,WACI,OACI,sBAAKR,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,WAAD,CAAUS,SAAU,cAAC,EAAD,IAApB,SACI,sBAAKT,UAAW,UAAhB,UACI,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,cAAcC,OAAQ,kBAAM,cAACR,EAAD,OAC9C,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,cAACL,EAAD,gB,+CClBxDM,EAAgC,CAClCC,SAAU,CACNC,MAAO,KACPC,MAAO,KACPC,eAAgB,MAEpBC,QAAS,GACTC,OAAQ,GACRC,MAAO,MCREC,EAAcC,YAAgB,CACvCC,WDY6B,WAAwF,IAAvFC,EAAsF,uDAA7DX,EAAcY,EAA+C,uCACpH,OAAQA,EAAOC,MACX,KAAK5B,IAAmB6B,gCACpB,OAAO,2BACAH,GADP,IAEIJ,MAAOK,EAAOG,UAEtB,KAAK9B,IAAmB+B,kCACpB,OAAO,2BACAL,GADP,IAEIV,SAAUW,EAAOG,UAEzB,KAAK9B,IAAmBgC,gCACpB,OAAO,2BACAN,GADP,IAEIL,OAAQM,EAAOG,UAEvB,KAAK9B,IAAmBiC,oBACpB,OAAO,2BACAP,GADP,IAEIN,QAAQ,GAAD,mBAAMM,EAAMN,SAAZ,CAAqBO,EAAOG,YAE3C,QACI,OAAOJ,ME7BbQ,EAAmBC,OAAM,sCAA8DC,IAChFC,EAAQC,YAAYf,EAAcW,EAC3CK,YAAgBC,OCHpBC,IAAS3B,OACL,cAAC,IAAD,CAAY4B,SAAUC,YAAtB,SAEI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAIRO,SAASC,eAAe,W","file":"static/js/main.3b153166.chunk.js","sourcesContent":["export enum HorizontalQuestion {\r\n    FETCH_HORIZONTAL = \"FETCH_HORIZONTAL\",\r\n    FETCH_HORIZONTAL_QUESTION_SUCCESS = \"FETCH_HORIZONTAL_QUESTION_SUCCESS\",\r\n    FETCH_HORIZONTAL_QUESTION_ERROR = \"FETCH_HORIZONTAL_QUESTION_ERROR\",\r\n    FETCH_HORIZONTAL_ANSWER_SUCCESS = \"FETCH_HORIZONTAL_ANSWER_SUCCESS\",\r\n    SET_HISTORY_ANSWERS = \"SET_HISTORY_ANSWERS\"\r\n}\r\n\r\nexport interface Word {\r\n    id: number\r\n    value: string\r\n}\r\nexport interface Question {\r\n    words: Word[] | null\r\n    questionNumber: number | null\r\n    title: string | null\r\n}\r\nexport interface HorizontalState {\r\n    question: Question\r\n    history: Array<Word[]>\r\n    answer: Word[]\r\n    error: string | null\r\n}\r\n\r\ninterface FetchHorizontalQuestion {\r\n    type: HorizontalQuestion.FETCH_HORIZONTAL\r\n}\r\ninterface FetchHorizontalQuestionSuccess {\r\n    type: HorizontalQuestion.FETCH_HORIZONTAL_QUESTION_SUCCESS,\r\n    payload: Question\r\n}\r\ninterface FetchHorizontalQuestionError {\r\n    type: HorizontalQuestion.FETCH_HORIZONTAL_QUESTION_ERROR,\r\n    payload: string\r\n}\r\ninterface FetchHorizontalAnswer {\r\n    type: HorizontalQuestion.FETCH_HORIZONTAL_ANSWER_SUCCESS,\r\n    payload: Word[]\r\n}\r\ninterface SetHistoryAnswers {\r\n    type: HorizontalQuestion.SET_HISTORY_ANSWERS,\r\n    payload: Word[]\r\n}\r\n\r\nexport type HorizontalActions = FetchHorizontalQuestion\r\n    | FetchHorizontalQuestionSuccess\r\n    | FetchHorizontalQuestionError\r\n    | FetchHorizontalAnswer\r\n    | SetHistoryAnswers\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-3\">\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to={'/horizontal'}>Horizontal Example</NavLink></li>\r\n                    <li><NavLink to={'/column'}>Column Example</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"progress\">\r\n            <div className=\"indeterminate\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, {Suspense} from 'react';\nimport {Route} from \"react-router-dom\";\nimport 'materialize-css'\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Preloader from \"./common/Preloader/Preloader\";\n\n\n//For Lazy loading components\nconst Horizontal = React.lazy(() => import(\"./pages/Horizontal/Horizontal\"))\nconst Column = React.lazy(() => import(\"./pages/Column/Column\"))\n\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Suspense fallback={<Preloader />}>\n                <div className={\"content\"}>\n                    <Route exact path='/horizontal' render={() => <Horizontal/>}/>\n                    <Route exact path='/column' render={() => <Column/>}/>\n                </div>\n            </Suspense>\n        </div>\n    );\n}\n\nexport default App;\n","import {HorizontalActions, HorizontalQuestion, HorizontalState} from \"../../types/horizontalQuestion\";\r\n\r\n\r\nconst initialState: HorizontalState = {\r\n    question: {\r\n        words: null,\r\n        title: null,\r\n        questionNumber: null\r\n    },\r\n    history: [],\r\n    answer: [],\r\n    error: null\r\n}\r\n\r\n\r\n\r\nexport const horizontalReducer = (state: HorizontalState = initialState, action: HorizontalActions): HorizontalState => {\r\n    switch (action.type) {\r\n        case HorizontalQuestion.FETCH_HORIZONTAL_QUESTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case HorizontalQuestion.FETCH_HORIZONTAL_QUESTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                question: action.payload\r\n            }\r\n        case HorizontalQuestion.FETCH_HORIZONTAL_ANSWER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                answer: action.payload\r\n            }\r\n        case HorizontalQuestion.SET_HISTORY_ANSWERS:\r\n            return {\r\n                ...state,\r\n                history: [...state.history, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {horizontalReducer} from \"./horizontalReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    horizontal: horizontalReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import {applyMiddleware, createStore, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {rootReducer} from \"./reducers\";\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\nexport const store = createStore(rootReducer,  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n))\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n    {/*<BrowserRouter basename={process.env.PUBLIC_URL}>*/}\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    {/*</BrowserRouter>*/}\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}